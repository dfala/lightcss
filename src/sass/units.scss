// Basic Increments for spacing

// Set base increment for project, default is 8px
$unitBase: 8px;

// For setting margin/padding/anything size based on $unitBase
//     Sample of how to use the below function
//     .className {
//         margin: size(4); //32px
//         padding: size(); //8px since default is 1 if no parameter
//         margin: size(0.5); //4px
//     }
@function size($multiplier:1) {
    @return $unitBase * $multiplier;
}

// All other increments are configured using the base, which corresponds to $unitSmaller. Update the inline comments to clarify what final px measurements would be
$unitBiggest: $unitBase * 8; // 64px
$unitBigger: $unitBase * 6; // 48px
$unitBig: $unitBase * 4; // 32px
$unitRegular: $unitBase * 3; // 24px
$unitSmall: $unitBase * 2; // 16px
$unitSmaller: $unitBase; // 8px
$unitSmallest: $unitBase / 2; // 4px
$unitNone: 0; // helpful to remove margins or padding


// Units map
$units: (
    biggest: $unitBiggest,
    bigger: $unitBigger,
    big: $unitBig,
    regular: $unitRegular,
    small: $unitSmall,
    smaller: $unitSmaller,
    smallest: $unitSmallest,
    none: $unitNone
);

// Utility classes for margins and padding
@each $size, $unit in $units {
    .margin-#{$size} {
        margin: #{$unit};
    }
    .margin-top-#{$size} {
        margin-top: #{$unit};
    }
    .margin-bottom-#{$size} {
        margin-bottom: #{$unit};
    }
    .margin-right-#{$size} {
        margin-right: #{$unit};
    }
    .margin-left-#{$size} {
        margin-left: #{$unit};
    }
    .padding-#{$size} {
        padding: #{$unit};
    }
    .padding-top-#{$size} {
        padding-top: #{$unit};
    }
    .padding-bottom-#{$size} {
        padding-bottom: #{$unit};
    }
    .padding-right-#{$size} {
        padding-right: #{$unit};
    }
    .padding-left-#{$size} {
        padding-left: #{$unit};
    }
}
